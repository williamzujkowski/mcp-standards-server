{
  "version": "2.0.0",
  "description": "Enhanced rule definitions for automatic standard selection including specialty standards",
  "rules": [
    {
      "id": "ai-ml-projects",
      "name": "AI/ML Operations Standards",
      "description": "Standards for AI/ML projects and machine learning operations",
      "priority": 5,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["machine_learning", "ai", "ml", "data_science", "mlops"]
          },
          {
            "field": "frameworks",
            "operator": "contains",
            "value": "tensorflow"
          },
          {
            "field": "frameworks",
            "operator": "contains",
            "value": "pytorch"
          },
          {
            "field": "frameworks",
            "operator": "contains",
            "value": "scikit-learn"
          },
          {
            "field": "frameworks",
            "operator": "contains",
            "value": "mlflow"
          },
          {
            "field": "components",
            "operator": "contains",
            "value": "ml_model"
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "machine learning"
          },
          {
            "field": "keywords",
            "operator": "contains",
            "value": "neural network"
          }
        ]
      },
      "standards": [
        "AI_ML_OPERATIONS_STANDARDS",
        "data-pipeline-patterns",
        "python-type-hints",
        "model-versioning",
        "experiment-tracking"
      ],
      "tags": ["ai", "ml", "data-science", "mlops"]
    },
    {
      "id": "blockchain-web3-projects",
      "name": "Blockchain/Web3 Standards",
      "description": "Standards for blockchain and Web3 development",
      "priority": 5,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["blockchain", "web3", "dapp", "defi", "nft", "dao", "smart_contract"]
          },
          {
            "field": "frameworks",
            "operator": "in",
            "value": ["hardhat", "truffle", "foundry", "brownie", "anchor"]
          },
          {
            "field": "blockchain_network",
            "operator": "in",
            "value": ["ethereum", "bitcoin", "polygon", "solana", "avalanche"]
          },
          {
            "field": "languages",
            "operator": "contains",
            "value": "solidity"
          },
          {
            "field": "components",
            "operator": "contains",
            "value": "smart_contract"
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "blockchain"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["cryptocurrency", "token", "wallet", "metamask"]
          }
        ]
      },
      "standards": [
        "BLOCKCHAIN_WEB3_STANDARDS",
        "security-owasp-top10",
        "api-security-patterns",
        "testing-smart-contracts",
        "gas-optimization"
      ],
      "tags": ["blockchain", "web3", "crypto", "defi", "smart-contracts"]
    },
    {
      "id": "iot-edge-projects",
      "name": "IoT/Edge Computing Standards",
      "description": "Standards for IoT devices and edge computing",
      "priority": 5,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["iot", "edge_computing", "embedded", "sensor_network"]
          },
          {
            "field": "deployment_target",
            "operator": "in",
            "value": ["edge", "iot_device", "embedded"]
          },
          {
            "field": "protocols",
            "operator": "in",
            "value": ["mqtt", "coap", "lorawan", "zigbee"]
          },
          {
            "field": "hardware",
            "operator": "in",
            "value": ["raspberry_pi", "arduino", "esp32", "sensors"]
          },
          {
            "field": "components",
            "operator": "contains",
            "value": "sensor"
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "low_power"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["industrial_iot", "smart_home", "wearable"]
          }
        ]
      },
      "standards": [
        "IOT_EDGE_COMPUTING_STANDARDS",
        "security-device-management",
        "data-pipeline-patterns",
        "real-time-processing",
        "power-optimization"
      ],
      "tags": ["iot", "edge", "embedded", "sensors"]
    },
    {
      "id": "ar-vr-projects",
      "name": "AR/VR Development Standards",
      "description": "Standards for augmented and virtual reality applications",
      "priority": 5,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["ar", "vr", "xr", "mixed_reality", "metaverse"]
          },
          {
            "field": "frameworks",
            "operator": "in",
            "value": ["unity", "unreal", "aframe", "threejs", "webxr"]
          },
          {
            "field": "platforms",
            "operator": "in",
            "value": ["oculus", "vive", "hololens", "magic_leap", "arcore", "arkit"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "immersive"
          },
          {
            "field": "components",
            "operator": "contains",
            "value": "3d_rendering"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["spatial_computing", "hand_tracking", "eye_tracking"]
          }
        ]
      },
      "standards": [
        "AR_VR_DEVELOPMENT_STANDARDS",
        "performance-optimization",
        "3d-graphics-standards",
        "user-experience-immersive",
        "accessibility-xr"
      ],
      "tags": ["ar", "vr", "xr", "3d", "immersive"]
    },
    {
      "id": "gaming-projects",
      "name": "Gaming Development Standards",
      "description": "Standards for game development and interactive entertainment",
      "priority": 5,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["game", "gaming", "interactive_entertainment"]
          },
          {
            "field": "frameworks",
            "operator": "in",
            "value": ["unity", "unreal", "godot", "cocos2d", "pygame"]
          },
          {
            "field": "platforms",
            "operator": "in",
            "value": ["steam", "playstation", "xbox", "nintendo", "mobile_gaming"]
          },
          {
            "field": "game_type",
            "operator": "in",
            "value": ["2d", "3d", "multiplayer", "mmo", "casual", "indie"]
          },
          {
            "field": "components",
            "operator": "contains",
            "value": "game_engine"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["gameplay", "physics", "animation", "audio"]
          }
        ]
      },
      "standards": [
        "GAMING_DEVELOPMENT_STANDARDS",
        "performance-optimization",
        "multiplayer-networking",
        "audio-standards",
        "user-interface-gaming"
      ],
      "tags": ["gaming", "entertainment", "interactive"]
    },
    {
      "id": "database-optimization-projects",
      "name": "Database Design & Optimization Standards",
      "description": "Standards for database design, optimization, and data architecture",
      "priority": 5,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["database", "data_warehouse", "analytics", "etl"]
          },
          {
            "field": "database_type",
            "operator": "in",
            "value": ["relational", "nosql", "graph", "time_series", "vector"]
          },
          {
            "field": "databases",
            "operator": "in",
            "value": ["postgresql", "mysql", "mongodb", "cassandra", "redis", "elasticsearch"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "high_throughput"
          },
          {
            "field": "components",
            "operator": "contains",
            "value": "data_modeling"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["olap", "oltp", "data_lake", "real_time_analytics"]
          }
        ]
      },
      "standards": [
        "DATABASE_DESIGN_OPTIMIZATION_STANDARDS",
        "sql-best-practices",
        "data-modeling-patterns",
        "performance-tuning",
        "backup-recovery"
      ],
      "tags": ["database", "data", "analytics", "performance"]
    },
    {
      "id": "sustainability-green-projects",
      "name": "Sustainability/Green Computing Standards",
      "description": "Standards for sustainable and environmentally conscious software development",
      "priority": 5,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "requirements",
            "operator": "contains",
            "value": "sustainability"
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "green_computing"
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "energy_efficiency"
          },
          {
            "field": "compliance",
            "operator": "contains",
            "value": "carbon_footprint"
          },
          {
            "field": "metrics",
            "operator": "contains",
            "value": "power_consumption"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["renewable_energy", "carbon_neutral", "eco_friendly"]
          }
        ]
      },
      "standards": [
        "SUSTAINABILITY_GREEN_COMPUTING_STANDARDS",
        "performance-optimization",
        "cloud-efficiency",
        "monitoring-power-usage",
        "carbon-tracking"
      ],
      "tags": ["sustainability", "green", "environment", "efficiency"]
    },
    {
      "id": "advanced-api-projects",
      "name": "Advanced API Design Standards",
      "description": "Standards for advanced API patterns and enterprise integration",
      "priority": 8,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "api_complexity",
            "operator": "in",
            "value": ["enterprise", "high_scale", "microservices"]
          },
          {
            "field": "api_patterns",
            "operator": "in",
            "value": ["graphql", "grpc", "event_sourcing", "cqrs"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "high_availability"
          },
          {
            "field": "scale",
            "operator": "in",
            "value": ["enterprise", "global", "high_traffic"]
          },
          {
            "field": "integration_patterns",
            "operator": "in",
            "value": ["pub_sub", "message_queues", "event_streaming"]
          }
        ]
      },
      "standards": [
        "ADVANCED_API_DESIGN_STANDARDS",
        "rest-api-design",
        "api-security-patterns",
        "microservices-patterns",
        "event-driven-architecture"
      ],
      "tags": ["api", "advanced", "enterprise", "integration"]
    },
    {
      "id": "react-web-app",
      "name": "React Web Application Standards",
      "description": "Standards for React-based web applications",
      "priority": 10,
      "conditions": {
        "logic": "AND",
        "conditions": [
          {
            "field": "project_type",
            "operator": "equals",
            "value": "web_application"
          },
          {
            "field": "framework",
            "operator": "in",
            "value": ["react", "next.js", "gatsby"]
          }
        ]
      },
      "standards": [
        "react-18-patterns",
        "javascript-es2025",
        "frontend-accessibility",
        "web-performance-core-vitals",
        "css-modern-architecture"
      ],
      "tags": ["frontend", "react", "web"]
    },
    {
      "id": "react-with-accessibility",
      "name": "React with Accessibility Requirements",
      "description": "Enhanced standards when accessibility is required",
      "priority": 5,
      "conditions": {
        "logic": "AND",
        "conditions": [
          {
            "field": "project_type",
            "operator": "equals",
            "value": "web_application"
          },
          {
            "field": "framework",
            "operator": "in",
            "value": ["react", "next.js", "gatsby"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "accessibility"
          }
        ]
      },
      "standards": [
        "react-18-patterns",
        "javascript-es2025",
        "wcag-2.2-accessibility",
        "aria-patterns",
        "web-performance-core-vitals",
        "css-modern-architecture",
        "accessibility-testing"
      ],
      "tags": ["frontend", "react", "accessibility", "web"]
    },
    {
      "id": "vue-web-app",
      "name": "Vue.js Web Application Standards",
      "description": "Standards for Vue.js applications",
      "priority": 10,
      "conditions": {
        "logic": "AND",
        "conditions": [
          {
            "field": "project_type",
            "operator": "equals",
            "value": "web_application"
          },
          {
            "field": "framework",
            "operator": "in",
            "value": ["vue", "nuxt"]
          }
        ]
      },
      "standards": [
        "vue-3-composition-api",
        "javascript-es2025",
        "frontend-accessibility",
        "web-performance-core-vitals",
        "css-modern-architecture"
      ],
      "tags": ["frontend", "vue", "web"]
    },
    {
      "id": "python-api",
      "name": "Python API Standards",
      "description": "Standards for Python-based APIs",
      "priority": 10,
      "conditions": {
        "logic": "AND",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["api", "rest_api", "backend"]
          },
          {
            "field": "language",
            "operator": "equals",
            "value": "python"
          }
        ]
      },
      "standards": [
        "python-pep8",
        "python-type-hints",
        "rest-api-design",
        "api-security-patterns",
        "python-testing-pytest",
        "api-documentation-openapi"
      ],
      "tags": ["backend", "python", "api"]
    },
    {
      "id": "python-fastapi",
      "name": "Python FastAPI Standards",
      "description": "Specific standards for FastAPI projects",
      "priority": 8,
      "conditions": {
        "logic": "AND",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["api", "rest_api", "backend"]
          },
          {
            "field": "language",
            "operator": "equals",
            "value": "python"
          },
          {
            "field": "framework",
            "operator": "equals",
            "value": "fastapi"
          }
        ]
      },
      "standards": [
        "python-pep8",
        "python-type-hints",
        "fastapi-patterns",
        "rest-api-design",
        "api-security-patterns",
        "python-testing-pytest",
        "api-documentation-openapi",
        "async-python-patterns"
      ],
      "tags": ["backend", "python", "api", "fastapi"]
    },
    {
      "id": "nodejs-api",
      "name": "Node.js API Standards",
      "description": "Standards for Node.js APIs",
      "priority": 10,
      "conditions": {
        "logic": "AND",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["api", "rest_api", "backend"]
          },
          {
            "field": "language",
            "operator": "equals",
            "value": "javascript"
          },
          {
            "field": "runtime",
            "operator": "equals",
            "value": "node"
          }
        ]
      },
      "standards": [
        "javascript-es2025",
        "nodejs-patterns",
        "rest-api-design",
        "api-security-patterns",
        "javascript-testing-jest",
        "api-documentation-openapi"
      ],
      "tags": ["backend", "javascript", "nodejs", "api"]
    },
    {
      "id": "microservices",
      "name": "Microservices Architecture Standards",
      "description": "Standards for microservices projects",
      "priority": 15,
      "conditions": {
        "field": "architecture",
        "operator": "equals",
        "value": "microservices"
      },
      "standards": [
        "microservices-patterns",
        "docker-best-practices",
        "kubernetes-patterns",
        "api-gateway-patterns",
        "service-mesh-patterns",
        "distributed-tracing"
      ],
      "tags": ["architecture", "microservices", "cloud-native"]
    },
    {
      "id": "cloud-native",
      "name": "Cloud Native Application Standards",
      "description": "Standards for cloud-native applications",
      "priority": 20,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "deployment_target",
            "operator": "in",
            "value": ["kubernetes", "k8s", "cloud"]
          },
          {
            "field": "containerized",
            "operator": "equals",
            "value": true
          }
        ]
      },
      "standards": [
        "cloud-native-patterns",
        "docker-best-practices",
        "kubernetes-patterns",
        "observability-standards",
        "security-container-scanning"
      ],
      "tags": ["cloud-native", "kubernetes", "docker"]
    },
    {
      "id": "database-required",
      "name": "Database Standards",
      "description": "Standards when database is used",
      "priority": 25,
      "conditions": {
        "field": "database",
        "operator": "exists"
      },
      "standards": [
        "database-design-patterns",
        "sql-best-practices",
        "data-migration-patterns",
        "database-security"
      ],
      "tags": ["database", "data"]
    },
    {
      "id": "postgresql-specific",
      "name": "PostgreSQL Specific Standards",
      "description": "Standards specific to PostgreSQL",
      "priority": 22,
      "conditions": {
        "field": "database",
        "operator": "equals",
        "value": "postgresql",
        "case_sensitive": false
      },
      "standards": [
        "postgresql-best-practices",
        "database-design-patterns",
        "sql-best-practices",
        "postgresql-performance",
        "database-security"
      ],
      "tags": ["database", "postgresql"]
    },
    {
      "id": "security-critical",
      "name": "Security Critical Application",
      "description": "Enhanced security standards for critical applications",
      "priority": 1,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "requirements",
            "operator": "contains",
            "value": "security"
          },
          {
            "field": "compliance",
            "operator": "exists"
          },
          {
            "field": "security_level",
            "operator": "in",
            "value": ["high", "critical"]
          }
        ]
      },
      "standards": [
        "security-owasp-top10",
        "security-authentication",
        "security-authorization",
        "security-encryption",
        "security-audit-logging",
        "nist-800-53-controls"
      ],
      "tags": ["security", "compliance"]
    },
    {
      "id": "ci-cd-pipeline",
      "name": "CI/CD Pipeline Standards",
      "description": "Standards for continuous integration and deployment",
      "priority": 30,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "ci_cd",
            "operator": "equals",
            "value": true
          },
          {
            "field": "tools",
            "operator": "contains",
            "value": "github-actions"
          },
          {
            "field": "tools",
            "operator": "contains",
            "value": "jenkins"
          }
        ]
      },
      "standards": [
        "ci-cd-best-practices",
        "automated-testing-standards",
        "deployment-strategies",
        "infrastructure-as-code"
      ],
      "tags": ["devops", "ci-cd"]
    },
    {
      "id": "mcp-server",
      "name": "MCP Server Development",
      "description": "Standards for Model Context Protocol servers",
      "priority": 5,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "equals",
            "value": "mcp_server"
          },
          {
            "field": "framework",
            "operator": "equals",
            "value": "mcp"
          }
        ]
      },
      "standards": [
        "mcp-server-patterns",
        "mcp-tool-definitions",
        "mcp-security-standards",
        "api-design-patterns",
        "error-handling-patterns"
      ],
      "tags": ["mcp", "server"]
    },
    {
      "id": "mobile-app",
      "name": "Mobile Application Standards",
      "description": "Standards for mobile app development",
      "priority": 10,
      "conditions": {
        "field": "project_type",
        "operator": "in",
        "value": ["mobile_app", "mobile_application"]
      },
      "standards": [
        "mobile-ui-patterns",
        "mobile-performance",
        "mobile-security",
        "offline-first-patterns",
        "mobile-testing"
      ],
      "tags": ["mobile"]
    },
    {
      "id": "react-native",
      "name": "React Native Standards",
      "description": "Specific standards for React Native apps",
      "priority": 8,
      "conditions": {
        "logic": "AND",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["mobile_app", "mobile_application"]
          },
          {
            "field": "framework",
            "operator": "equals",
            "value": "react-native"
          }
        ]
      },
      "standards": [
        "react-native-patterns",
        "mobile-ui-patterns",
        "mobile-performance",
        "mobile-security",
        "react-patterns-mobile",
        "mobile-testing"
      ],
      "tags": ["mobile", "react-native"]
    },
    {
      "id": "data-pipeline",
      "name": "Data Pipeline Standards",
      "description": "Standards for data processing pipelines",
      "priority": 15,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["data_pipeline", "etl", "data_processing"]
          },
          {
            "field": "components",
            "operator": "contains",
            "value": "data_pipeline"
          }
        ]
      },
      "standards": [
        "data-pipeline-patterns",
        "data-quality-standards",
        "data-transformation-patterns",
        "data-governance",
        "batch-processing-patterns"
      ],
      "tags": ["data-engineering", "etl"]
    },
    {
      "id": "machine-learning-legacy",
      "name": "Machine Learning Project Standards (Legacy)",
      "description": "Legacy ML standards for backwards compatibility",
      "priority": 50,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "equals",
            "value": "machine_learning"
          },
          {
            "field": "components",
            "operator": "contains",
            "value": "ml_model"
          }
        ]
      },
      "standards": [
        "ml-project-structure",
        "ml-experiment-tracking",
        "ml-model-versioning",
        "ml-data-validation",
        "ml-deployment-patterns"
      ],
      "tags": ["machine-learning", "ai", "legacy"]
    },
    {
      "id": "documentation-project",
      "name": "Documentation Standards",
      "description": "Standards for documentation projects",
      "priority": 35,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "equals",
            "value": "documentation"
          },
          {
            "field": "primary_purpose",
            "operator": "equals",
            "value": "documentation"
          }
        ]
      },
      "standards": [
        "technical-writing-standards",
        "markdown-conventions",
        "documentation-structure",
        "api-documentation-standards"
      ],
      "tags": ["documentation", "writing"]
    },
    {
      "id": "performance-critical",
      "name": "Performance Critical Application",
      "description": "Standards for performance-critical applications",
      "priority": 8,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "requirements",
            "operator": "contains",
            "value": "performance"
          },
          {
            "field": "performance_critical",
            "operator": "equals",
            "value": true
          },
          {
            "field": "sla.response_time_ms",
            "operator": "less_than",
            "value": 100
          }
        ]
      },
      "standards": [
        "performance-optimization",
        "caching-strategies",
        "database-optimization",
        "load-testing-standards",
        "performance-monitoring"
      ],
      "tags": ["performance", "optimization"]
    },
    {
      "id": "team-size-large",
      "name": "Large Team Standards",
      "description": "Additional standards for large teams",
      "priority": 40,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "team_size",
            "operator": "greater_than",
            "value": 10
          },
          {
            "field": "team_size",
            "operator": "equals",
            "value": "large"
          }
        ]
      },
      "standards": [
        "code-review-standards",
        "branching-strategies",
        "documentation-standards",
        "team-collaboration-patterns"
      ],
      "tags": ["team", "collaboration"]
    },
    {
      "id": "advanced-testing-projects",
      "name": "Advanced Testing Standards",
      "description": "Standards for comprehensive testing strategies and test automation",
      "priority": 7,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "testing_focus",
            "operator": "in",
            "value": ["e2e", "integration", "performance", "security", "chaos"]
          },
          {
            "field": "test_coverage_target",
            "operator": "greater_than",
            "value": 80
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "test automation"
          },
          {
            "field": "tools",
            "operator": "in",
            "value": ["cypress", "playwright", "selenium", "k6", "jmeter"]
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["tdd", "bdd", "test-driven", "behavior-driven"]
          }
        ]
      },
      "standards": [
        "ADVANCED_TESTING_STANDARDS",
        "test-automation-patterns",
        "test-data-management",
        "performance-testing",
        "security-testing"
      ],
      "tags": ["testing", "quality", "automation"]
    },
    {
      "id": "security-review-audit",
      "name": "Security Review and Audit Standards",
      "description": "Standards for security assessments, reviews, and audits",
      "priority": 3,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_phase",
            "operator": "in",
            "value": ["security_review", "audit", "assessment"]
          },
          {
            "field": "compliance",
            "operator": "in",
            "value": ["soc2", "iso27001", "pci-dss", "hipaa"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "security audit"
          },
          {
            "field": "security_requirements",
            "operator": "contains",
            "value": "penetration testing"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["vulnerability", "threat modeling", "security assessment"]
          }
        ]
      },
      "standards": [
        "SECURITY_REVIEW_AUDIT_STANDARDS",
        "security-scanning-tools",
        "vulnerability-management",
        "security-documentation",
        "compliance-reporting"
      ],
      "tags": ["security", "audit", "compliance", "review"]
    },
    {
      "id": "documentation-writing",
      "name": "Documentation and Technical Writing Standards",
      "description": "Standards for creating comprehensive documentation",
      "priority": 25,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["documentation", "docs", "wiki", "knowledge_base"]
          },
          {
            "field": "deliverables",
            "operator": "contains",
            "value": "documentation"
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "documentation"
          },
          {
            "field": "tools",
            "operator": "in",
            "value": ["mkdocs", "sphinx", "docusaurus", "gitbook"]
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["readme", "api docs", "user guide", "developer guide"]
          }
        ]
      },
      "standards": [
        "DOCUMENTATION_WRITING_STANDARDS",
        "markdown-best-practices",
        "api-documentation",
        "diagram-standards",
        "changelog-conventions"
      ],
      "tags": ["documentation", "writing", "communication"]
    },
    {
      "id": "technical-content-creation",
      "name": "Technical Content Creation Standards",
      "description": "Standards for creating technical content, tutorials, and educational materials",
      "priority": 28,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["tutorial", "course", "blog", "technical_content"]
          },
          {
            "field": "content_type",
            "operator": "in",
            "value": ["tutorial", "how-to", "guide", "workshop"]
          },
          {
            "field": "deliverables",
            "operator": "contains",
            "value": "tutorial"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["learning", "education", "training", "workshop"]
          }
        ]
      },
      "standards": [
        "TECHNICAL_CONTENT_CREATION_STANDARDS",
        "tutorial-structure",
        "code-examples",
        "interactive-content",
        "media-standards"
      ],
      "tags": ["content", "education", "tutorials"]
    },
    {
      "id": "project-planning",
      "name": "Project Planning Standards",
      "description": "Standards for project planning, estimation, and management",
      "priority": 35,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_phase",
            "operator": "in",
            "value": ["planning", "initiation", "discovery"]
          },
          {
            "field": "deliverables",
            "operator": "contains",
            "value": "project plan"
          },
          {
            "field": "management_methodology",
            "operator": "in",
            "value": ["agile", "scrum", "kanban", "waterfall"]
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["roadmap", "milestone", "sprint", "estimation"]
          }
        ]
      },
      "standards": [
        "PROJECT_PLANNING_STANDARDS",
        "estimation-techniques",
        "risk-management",
        "resource-planning",
        "milestone-tracking"
      ],
      "tags": ["planning", "management", "process"]
    },
    {
      "id": "team-collaboration",
      "name": "Team Collaboration Standards",
      "description": "Standards for effective team collaboration and communication",
      "priority": 38,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "team_size",
            "operator": "greater_than",
            "value": 5
          },
          {
            "field": "distributed_team",
            "operator": "equals",
            "value": true
          },
          {
            "field": "collaboration_tools",
            "operator": "in",
            "value": ["slack", "teams", "discord", "zoom"]
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["remote", "distributed", "collaboration", "communication"]
          }
        ]
      },
      "standards": [
        "TEAM_COLLABORATION_STANDARDS",
        "communication-protocols",
        "meeting-standards",
        "documentation-sharing",
        "conflict-resolution"
      ],
      "tags": ["team", "collaboration", "communication"]
    },
    {
      "id": "monitoring-incident-response",
      "name": "Monitoring and Incident Response Standards",
      "description": "Standards for monitoring, alerting, and incident management",
      "priority": 12,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "production_system",
            "operator": "equals",
            "value": true
          },
          {
            "field": "monitoring_tools",
            "operator": "in",
            "value": ["prometheus", "grafana", "datadog", "new_relic", "pagerduty"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "monitoring"
          },
          {
            "field": "sla",
            "operator": "exists"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["alerting", "on-call", "incident", "outage"]
          }
        ]
      },
      "standards": [
        "MONITORING_INCIDENT_RESPONSE_STANDARDS",
        "alerting-best-practices",
        "incident-management",
        "runbook-standards",
        "post-mortem-process"
      ],
      "tags": ["monitoring", "operations", "incident-response"]
    },
    {
      "id": "sre-practices",
      "name": "Site Reliability Engineering Standards",
      "description": "Standards for SRE practices and reliability engineering",
      "priority": 10,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "team_type",
            "operator": "in",
            "value": ["sre", "devops", "platform"]
          },
          {
            "field": "reliability_target",
            "operator": "greater_than",
            "value": 99
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "high availability"
          },
          {
            "field": "slo",
            "operator": "exists"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["sli", "slo", "error budget", "toil"]
          }
        ]
      },
      "standards": [
        "SRE_STANDARDS",
        "slo-definition",
        "error-budget-policy",
        "chaos-engineering",
        "capacity-planning"
      ],
      "tags": ["sre", "reliability", "operations"]
    },
    {
      "id": "business-continuity-dr",
      "name": "Business Continuity and Disaster Recovery Standards",
      "description": "Standards for business continuity planning and disaster recovery",
      "priority": 6,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "criticality",
            "operator": "in",
            "value": ["mission-critical", "critical", "high"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "disaster recovery"
          },
          {
            "field": "compliance",
            "operator": "contains",
            "value": "business continuity"
          },
          {
            "field": "rto",
            "operator": "less_than",
            "value": 4
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["backup", "recovery", "failover", "replication"]
          }
        ]
      },
      "standards": [
        "BUSINESS_CONTINUITY_DISASTER_RECOVERY_STANDARDS",
        "backup-strategies",
        "recovery-procedures",
        "failover-patterns",
        "dr-testing"
      ],
      "tags": ["disaster-recovery", "business-continuity", "resilience"]
    },
    {
      "id": "accessibility-advanced",
      "name": "Advanced Accessibility Standards",
      "description": "Comprehensive accessibility standards beyond basic compliance",
      "priority": 4,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "accessibility_level",
            "operator": "in",
            "value": ["wcag-aaa", "advanced", "comprehensive"]
          },
          {
            "field": "target_audience",
            "operator": "contains",
            "value": "accessibility"
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "screen reader"
          },
          {
            "field": "compliance",
            "operator": "contains",
            "value": "ada"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["aria", "assistive technology", "inclusive design"]
          }
        ]
      },
      "standards": [
        "ADVANCED_ACCESSIBILITY_STANDARDS",
        "wcag-aaa-compliance",
        "aria-advanced-patterns",
        "cognitive-accessibility",
        "mobile-accessibility"
      ],
      "tags": ["accessibility", "a11y", "inclusive"]
    },
    {
      "id": "internationalization-localization",
      "name": "Internationalization and Localization Standards",
      "description": "Standards for building globally accessible applications",
      "priority": 15,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "target_markets",
            "operator": "greater_than",
            "value": 1
          },
          {
            "field": "languages_supported",
            "operator": "greater_than",
            "value": 1
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "multi-language"
          },
          {
            "field": "features",
            "operator": "contains",
            "value": "localization"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["i18n", "l10n", "translation", "locale"]
          }
        ]
      },
      "standards": [
        "INTERNATIONALIZATION_LOCALIZATION_STANDARDS",
        "i18n-architecture",
        "translation-management",
        "date-time-formatting",
        "currency-handling"
      ],
      "tags": ["i18n", "l10n", "internationalization"]
    },
    {
      "id": "data-privacy-compliance",
      "name": "Data Privacy and Compliance Standards",
      "description": "Standards for data privacy, protection, and regulatory compliance",
      "priority": 2,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "compliance",
            "operator": "in",
            "value": ["gdpr", "ccpa", "pipeda", "lgpd"]
          },
          {
            "field": "data_classification",
            "operator": "in",
            "value": ["pii", "phi", "sensitive", "confidential"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "data privacy"
          },
          {
            "field": "features",
            "operator": "contains",
            "value": "user consent"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["privacy", "data protection", "consent", "right to be forgotten"]
          }
        ]
      },
      "standards": [
        "DATA_PRIVACY_COMPLIANCE_STANDARDS",
        "data-minimization",
        "consent-management",
        "data-retention",
        "privacy-by-design"
      ],
      "tags": ["privacy", "compliance", "data-protection"]
    },
    {
      "id": "developer-experience",
      "name": "Developer Experience Standards",
      "description": "Standards for creating excellent developer experiences",
      "priority": 22,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_type",
            "operator": "in",
            "value": ["sdk", "library", "framework", "api", "developer_tool"]
          },
          {
            "field": "target_audience",
            "operator": "contains",
            "value": "developers"
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "developer experience"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["dx", "api ergonomics", "sdk", "cli"]
          }
        ]
      },
      "standards": [
        "DEVELOPER_EXPERIENCE_STANDARDS",
        "api-ergonomics",
        "sdk-design",
        "cli-patterns",
        "developer-documentation"
      ],
      "tags": ["dx", "developer-experience", "usability"]
    },
    {
      "id": "performance-optimization",
      "name": "Performance Optimization Standards",
      "description": "Advanced performance optimization techniques and standards",
      "priority": 9,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "performance_requirements",
            "operator": "exists"
          },
          {
            "field": "optimization_focus",
            "operator": "in",
            "value": ["speed", "memory", "bandwidth", "latency"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "performance optimization"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["optimization", "performance tuning", "profiling", "benchmarking"]
          }
        ]
      },
      "standards": [
        "PERFORMANCE_OPTIMIZATION_STANDARDS",
        "profiling-techniques",
        "caching-strategies",
        "lazy-loading",
        "performance-budgets"
      ],
      "tags": ["performance", "optimization", "speed"]
    },
    {
      "id": "code-review-practices",
      "name": "Code Review Standards",
      "description": "Standards for effective code review processes",
      "priority": 32,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "development_process",
            "operator": "contains",
            "value": "code review"
          },
          {
            "field": "team_size",
            "operator": "greater_than",
            "value": 2
          },
          {
            "field": "quality_gates",
            "operator": "contains",
            "value": "peer review"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["pull request", "merge request", "peer review"]
          }
        ]
      },
      "standards": [
        "CODE_REVIEW_STANDARDS",
        "review-checklist",
        "feedback-guidelines",
        "review-automation",
        "review-metrics"
      ],
      "tags": ["code-review", "quality", "collaboration"]
    },
    {
      "id": "technical-debt-management",
      "name": "Technical Debt Management Standards",
      "description": "Standards for managing and reducing technical debt",
      "priority": 26,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "project_age",
            "operator": "greater_than",
            "value": 2
          },
          {
            "field": "refactoring_needed",
            "operator": "equals",
            "value": true
          },
          {
            "field": "legacy_code",
            "operator": "exists"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["refactoring", "legacy", "modernization", "tech debt"]
          }
        ]
      },
      "standards": [
        "TECHNICAL_DEBT_MANAGEMENT_STANDARDS",
        "refactoring-strategies",
        "debt-tracking",
        "modernization-patterns",
        "risk-assessment"
      ],
      "tags": ["technical-debt", "refactoring", "maintenance"]
    },
    {
      "id": "deployment-release",
      "name": "Deployment and Release Standards",
      "description": "Standards for deployment strategies and release management",
      "priority": 18,
      "conditions": {
        "logic": "OR",
        "conditions": [
          {
            "field": "deployment_strategy",
            "operator": "in",
            "value": ["blue-green", "canary", "rolling", "feature-flags"]
          },
          {
            "field": "release_frequency",
            "operator": "in",
            "value": ["continuous", "daily", "weekly"]
          },
          {
            "field": "requirements",
            "operator": "contains",
            "value": "zero downtime"
          },
          {
            "field": "keywords",
            "operator": "in",
            "value": ["deployment", "release", "rollout", "rollback"]
          }
        ]
      },
      "standards": [
        "DEPLOYMENT_RELEASE_STANDARDS",
        "deployment-strategies",
        "release-notes",
        "rollback-procedures",
        "feature-toggle-management"
      ],
      "tags": ["deployment", "release", "devops"]
    }
  ]
}