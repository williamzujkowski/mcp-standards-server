[pytest]
# pytest configuration for MCP Standards Server

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    asyncio: marks tests as async (deselect with '-m "not asyncio"')
    e2e: marks tests as end-to-end tests
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    benchmark: marks tests as benchmark tests
    slow: marks tests as slow running
    mcp: marks tests that require MCP server

# Output options
addopts = 
    --strict-markers
    --verbose
    --tb=short
    -p no:warnings
    --asyncio-mode=auto

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Timeout configuration
timeout = 300
timeout_method = thread

# Benchmark configuration
[benchmark]
min_rounds = 5
max_time = 1.0
min_time = 0.01
timer = time.perf_counter
disable_gc = true
warmup = true