[pytest]
# Fast test configuration - skip slow/problematic tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    asyncio: marks tests as async
    e2e: marks tests as end-to-end tests
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    slow: marks tests as slow running
    skip_in_fast: skip in fast test mode

# Fast mode options
addopts = 
    --strict-markers
    -v
    --tb=short
    -p no:warnings
    --asyncio-mode=auto
    --no-cov
    -m "not slow and not performance and not e2e"
    --ignore=tests/unit/core/standards/test_semantic_search_comprehensive.py
    --ignore=tests/unit/core/cache/test_redis_client.py
    --ignore=tests/unit/core/cache/test_redis_security.py
    --ignore=tests/unit/test_async_server.py
    --ignore=tests/unit/test_http_server.py
    --ignore=tests/unit/test_main.py
    --ignore=tests/unit/core/test_rate_limiting.py

# Timeout configuration
timeout = 10
timeout_method = thread

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function