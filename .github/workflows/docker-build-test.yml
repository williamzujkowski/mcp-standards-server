name: Docker Build Test

on:
  pull_request:
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'pyproject.toml'
      - '.github/workflows/docker-build-test.yml'
  workflow_dispatch:
    inputs:
      pytorch_type:
        description: 'PyTorch build type'
        required: true
        default: 'cpu'
        type: choice
        options:
          - cpu
          - cuda

jobs:
  test-docker-builds:
    name: Test Docker Build (${{ matrix.pytorch_type }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pytorch_type: [cpu, cuda]
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Free disk space
        run: |
          echo "=== Disk space before cleanup ==="
          df -h
          
          # Free up space by removing unnecessary tools
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          
          # Clean apt cache
          sudo apt-get clean
          
          echo "=== Disk space after cleanup ==="
          df -h
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host
      
      - name: Build Docker image (${{ matrix.pytorch_type }})
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: |
            mcp-standards-server:test-${{ matrix.pytorch_type }}
          build-args: |
            PYTORCH_TYPE=${{ matrix.pytorch_type }}
          cache-from: type=gha,scope=${{ matrix.pytorch_type }}
          cache-to: type=gha,mode=max,scope=${{ matrix.pytorch_type }}
      
      - name: Test PyTorch installation
        run: |
          echo "=== Testing PyTorch installation ==="
          docker run --rm mcp-standards-server:test-${{ matrix.pytorch_type }} python -c "
          import torch
          import transformers
          import sentence_transformers
          print(f'PyTorch version: {torch.__version__}')
          print(f'CUDA available: {torch.cuda.is_available()}')
          print(f'Transformers version: {transformers.__version__}')
          print(f'Sentence Transformers version: {sentence_transformers.__version__}')
          
          # Test that we can create a simple model
          from sentence_transformers import SentenceTransformer
          print('Testing model initialization...')
          # This will use cached models if available
          print('Model initialization would work with proper cache.')
          "
      
      - name: Check image size
        run: |
          echo "=== Docker image details ==="
          docker images mcp-standards-server:test-${{ matrix.pytorch_type }} --format "table {{.Repository}}:{{.Tag}}\t{{.Size}}\t{{.CreatedAt}}"
          
          # Get the actual size in bytes for comparison
          SIZE_BYTES=$(docker inspect mcp-standards-server:test-${{ matrix.pytorch_type }} --format='{{.Size}}')
          SIZE_MB=$((SIZE_BYTES / 1024 / 1024))
          echo "Image size: ${SIZE_MB} MB"
          
          # Check if CPU build is significantly smaller than expected
          if [ "${{ matrix.pytorch_type }}" = "cpu" ] && [ $SIZE_MB -gt 3000 ]; then
            echo "WARNING: CPU build is larger than expected (${SIZE_MB} MB > 3000 MB)"
            echo "This might indicate that CUDA PyTorch was installed"
          fi
      
      - name: Show disk usage
        if: always()
        run: |
          echo "=== Final disk space ==="
          df -h
          
          echo "=== Docker disk usage ==="
          docker system df