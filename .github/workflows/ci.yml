name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Create virtual environment
      run: uv venv
      
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        
    - name: Run ruff
      run: |
        source .venv/bin/activate
        ruff check src tests
        
    - name: Run mypy
      run: |
        source .venv/bin/activate
        mypy src
        
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Create virtual environment
      run: uv venv
      
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        
    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest --cov=src --cov-report=xml --cov-report=term
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        
  security:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
        
  compliance:
    name: NIST Compliance Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Create virtual environment
      run: uv venv
      
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -e .
        
    - name: Run compliance scan
      run: |
        source .venv/bin/activate
        mcp-standards scan --output-format json --output-file compliance-report.json
        
    - name: Check compliance thresholds
      run: |
        source .venv/bin/activate
        python -c "
        import json
        with open('compliance-report.json') as f:
            report = json.load(f)
        coverage = report['summary']['coverage_percentage']
        if coverage < 70:
            print(f'❌ Compliance coverage {coverage}% is below 70% threshold')
            exit(1)
        else:
            print(f'✅ Compliance coverage {coverage}% meets threshold')
        "
        
    - name: Upload compliance report
      uses: actions/upload-artifact@v4
      with:
        name: compliance-report
        path: compliance-report.json