name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
      - 'README.md'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
      - 'README.md'
      - 'mkdocs.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        timeout-minutes: 10
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install mkdocs mkdocs-material mkdocstrings[python] mkdocs-git-revision-date-localized-plugin
      
      - name: Build documentation
        timeout-minutes: 15
        run: |
          # Generate API documentation
          python -m mkdocs build --verbose
      
      - name: Check for broken links
        timeout-minutes: 10
        run: |
          pip install linkchecker
          if ! linkchecker site/ --no-warnings; then
            echo " Broken links found in documentation. Please review and fix."
            linkchecker site/ --no-warnings || true
            exit 1
          fi
          echo " No broken links found in documentation"
      
      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: site/
          retention-days: 30

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: ./site
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  check-docstrings:
    name: Check Docstrings
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        timeout-minutes: 5
        run: |
          python -m pip install --upgrade pip
          pip install pydocstyle interrogate
      
      - name: Check docstring style
        run: |
          pydocstyle src/ --config=setup.cfg || true
      
      - name: Check docstring coverage
        timeout-minutes: 5
        run: |
          interrogate -v src/ -o docstring-coverage.txt
          
          # Display results
          echo "## Docstring Coverage Report" >> $GITHUB_STEP_SUMMARY
          cat docstring-coverage.txt >> $GITHUB_STEP_SUMMARY
          
          # Fail if coverage is too low using Python instead of bc
          coverage=$(grep "TOTAL" docstring-coverage.txt | awk '{print $NF}' | sed 's/%//')
          if python3 -c "import sys; sys.exit(0 if float('$coverage') >= 80 else 1)"; then
            echo " Docstring coverage is above 80%" >> $GITHUB_STEP_SUMMARY
            
          else
            echo " Docstring coverage is above 80%" >> $GITHUB_STEP_SUMMARY
          fi

  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generate changelog
        uses: orhun/git-cliff-action@v3
        with:
          config: .github/cliff.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md
      
      - name: Commit changelog
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if git diff --quiet; then
            echo "No changes to changelog"
          else
            git add CHANGELOG.md
            git commit -m "docs: update changelog [skip ci]"
            git push
          fi